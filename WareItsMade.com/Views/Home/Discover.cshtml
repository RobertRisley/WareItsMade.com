@model WareItsMade.com.Models.WaresEntities
@{
    ViewBag.Title = "Discover Wares";
}
@{
    var caption = Session["caption"] as String;
}
<h2>@ViewBag.Title for...@Html.Label("lblCountry", new { id = "lblCountry", style = "width: 400px" })</h2>

<div>
    @Html.TextBox("tbSearch", null, new { id = "tbSearch", @class = "form-control", placeholder = "Search by name", title = "Enter the name of a commodity or service and click Search" })
    <button type="submit" id="search" class="btn btn-default"><< Search for this name</button>
</div>

@using (Html.BeginForm("Discover", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.DropDownList("ddlCountrys", (SelectList)ViewBag.Countrys, new { style = "visibility:hidden" })
    <br />
    <p>
        OR &nbsp; select Wares using&nbsp; <a href="http://unspsc.org" target="_blank" style="font-size: 18px">UNSPSC &copy;</a> classifications:
        <br />
        @Html.DropDownListFor(Model => Model.Segments, new SelectList(ViewBag.Segments as System.Collections.IEnumerable, "Value", "Text"),
                                    "Select a Segment", new { id = "ddlSegments", style = "width: auto", title = "Select a Segment, then you can select a Family" })
        <br />
        @Html.DropDownListFor(Model => Model.Familys, new SelectList(Enumerable.Empty<SelectListItem>(), "FamilyId", "FamilyTitle"),
                                    "Family", new { id = "ddlFamilys", style = "width: auto", @disabled = "disabled", title = "Select a Family, then you can select a Class" })
        <br />
        @Html.DropDownListFor(Model => Model.Classes, new SelectList(Enumerable.Empty<SelectListItem>(), "ClassId", "ClassTitle"),
                                    "Class", new { id = "ddlClasses", style = "width: auto", @disabled = "disabled", title = "Select a Class, then you can select a Commodity (Ware)" })
        <br />
        @Html.DropDownListFor(Model => Model.Commoditys, new SelectList(Enumerable.Empty<SelectListItem>(), "CommodityId", "CommodityTitle"),
                                    "Commodity", new { id = "ddlCommoditys", @class = "bold-ddl", @disabled = "disabled", title = "Select a Commodity or Service (Ware), then you will get a list to browse" })
        @Html.Label("<<-- The Wares", new { id = "lblCommoditys", style = "visibility:hidden;font-weight:bold" })
        <br />
    </p>
    <p>
        <fieldset>
            <br />
            <div id="grid">
                @using MvcJqGrid
                @(Html.Grid("WaresGrid")
                    //.SetCaption("Wares")
                    .AddColumn(new Column("ID").SetLabel("Id").SetWidth(20))
                    .AddColumn(new Column("CountryId").SetLabel("Country").SetWidth(30))
                    .AddColumn(new Column("CommodityTitle").SetLabel("Item").SetWidth(50))
                    .AddColumn(new Column("ObjectId").SetLabel("ItemId").SetWidth(20))
                    .AddColumn(new Column("NameName").SetLabel("From").SetWidth(50))
                    .AddColumn(new Column("WeightedPercentage").SetLabel("Score").SetWidth(50))
                    .AddColumn(new Column("UserName").SetLabel("User").SetWidth(50))
                    .AddColumn(new Column("CommodityId").SetLabel("WareId").SetWidth(50))
                    .SetUrl(Url.Action("GridDataBasic"))
                    .SetAutoWidth(true)
                    .SetRowNum(10)
                    .SetRowList(new[] { 10, 15, 20, 50 })
                    .SetViewRecords(true)
                    .SetPager("pager"))
            </div>
            <br />
            @Html.CheckBox("chkWeight", false, new { id = "chkWeight" })<b> Show Factors of Production weighting</b>
            <br />
            Estimated values indicating the relative importance of each item in a group as compared to other items in the group.
            <br />
            <div id="divWeights" style="visibility:hidden">
                <br />
                <ol>
                    <li style="margin-left:20px;">
                        <h5>
                            Entrepreneurship
                            @Html.TextBox("txtEnt", String.Empty, new { id = "txtEnt", style = "width:40px", title = "Enter the weighting value for Entrepreneurship(Ownership)" })
                        </h5>
                        Ownership takes on the risk of bringing Capital, Labor, and Land together to produce wares.
                    </li>
                    <li style="margin-left:20px;">
                        <h5>
                            Capital
                            @Html.TextBox("txtCap", String.Empty, new { id = "txtCap", style = "width:40px", title = "Enter the weighting value for Capital(Parts/Sub-Assemblies/Services/Tooling)" })
                        </h5>
                        Parts, sub-assemblies, and services. Plus tools, machinery, equipment, and vehicles.
                    </li>
                    <li style="margin-left:20px;">
                        <h5>
                            Labor
                            @Html.TextBox("txtLab", String.Empty, new { id = "txtLab", style = "width:40px", title = "Enter the weighting value for Labor" })
                        </h5>
                        Human effort used in production, which also includes technical, marketing, and management.
                    </li>
                    <li style="margin-left:20px;">
                        <h5>
                            Land
                            @Html.TextBox("txtLan", String.Empty, new { id = "txtLan", style = "width:40px", title = "Enter the weighting value for Land(Natural Resources)" })
                        </h5>
                        Natural resources; organic (plants, animals, fossil fuels) and non-organic (air, water, minerals, metals, light, heat).
                    </li>
                </ol>
            </div>
        </fieldset>
    </p>
}
<script type="text/javascript">
    var sessionData;
    var ent;
    var cap;
    var lab;
    var lan;

    $(function () {
        LoadSessionData();

        var txt = $("#ddlCountrys :selected").text();

        var obj;

        obj = $("#lblCountry");
        obj.text(txt);

        obj = $("#ddlCountrys");
        obj.attr("disabled", "disabled")

        obj = $("#ddlSegments");
        obj.attr("width", "auto");

        obj = $("#ddlCommoditys");
        obj.attr("font-weight", "bold");
    });

    function SaveSessionData() {
        $.post('/SessionData/Save', sessionData);
    }

    function LoadSessionData() {
        $.post('/SessionData/Load', OnSessionDataLoaded);
    }

    function OnSessionDataLoaded(data) {
        sessionData = data;

        var obj;

        obj = $("#txtEnt");
        obj.attr("value", sessionData.OwnershipWeight);
        ent = sessionData.OwnershipWeight;

        obj = $("#txtCap");
        obj.attr("value", sessionData.CapitalWeight);
        cap = sessionData.CapitalWeight;

        obj = $("#txtLab");
        obj.attr("value", sessionData.LaborWeight);
        lab = sessionData.LaborWeight;

        obj = $("#txtLan");
        obj.attr("value", sessionData.LandWeight);
        lan = sessionData.LandWeight;

        obj = $("#divWeights");
        obj.attr("style", "display:none");

        //obj = $("#grid");
        //obj.attr("style", "display:none");

        //var obj = $("#divWeights");
        //if (sessionData.WeightVisible)
        //    obj.attr("style", "visibility:normal");
        //else
        //    obj.attr("style", "visibility:hidden");
    }

    function InitDDL(ddl, ddltext, ddldisable) {
        var select = $(ddl);
        select.empty();
        select.append($('<option/>', { value: 0, text: ddltext }));
        if (ddldisable == "true")
            select.attr("disabled", "disabled")
        else
            select.removeAttr("disabled")
    }

    function OnlyNumbers(event) {
        // Allow: backspace, delete, tab, escape, enter and .
        if ($.inArray(event.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
            // Allow: Ctrl+A
            (event.keyCode == 65 && event.ctrlKey === true) ||
            // Allow: Ctrl+C
            (event.keyCode == 67 && event.ctrlKey === true) ||
            // Allow: Ctrl+V
            (event.keyCode == 86 && event.ctrlKey === true) ||
            // Allow: home, end, left, right
            (event.keyCode >= 35 && event.keyCode <= 39)) {
            // let it happen, don't do anything
            return;
        }
        else {
            // Ensure that it is a number and stop the keypress
            if (event.shiftKey || (event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
                event.preventDefault();
            }
        }
    }

    $(document).ready(function () {

        $("#ddlCountrys").change(function () {
            sessionData.SelectedCountryId = $(this).val();
            SaveSessionData();
        });

        $("#ddlSegments").change(function () {
            $.getJSON("../Home/GetFamilysJson", { segmentId: $(this).val() },
                   function (data) {
                       var obj = $("#grid");
                       obj.attr("style", "display:none");
                       InitDDL("#ddlCommoditys", "Commodity", "true");
                       var lbl = $("#lblCommoditys"); lbl.attr("style", "visibility:hidden");
                       InitDDL("#ddlClasses", "Class", "true");
                       InitDDL("#ddlFamilys", "Select a Family", "false");
                       var select = $("#ddlFamilys");
                       $.each(data, function (i, item) {
                           select.append($('<option/>', { value: item.Value, text: item.Text }));
                       });
                   });
        });

        $("#ddlFamilys").change(function () {
            $.getJSON("../Home/GetClassesJson", { familyId: $(this).val() },
                   function (data) {
                       var obj = $("#grid");
                       obj.attr("style", "display:none");
                       InitDDL("#ddlCommoditys", "Commodity", "true");
                       var lbl = $("#lblCommoditys"); lbl.attr("style", "visibility:hidden");
                       InitDDL("#ddlClasses", "Select a Class", "false");
                       var select = $("#ddlClasses");
                       $.each(data, function (i, item) {
                           select.append($('<option/>', { value: item.Value, text: item.Text }));
                       });
                   });
        });

        $("#ddlClasses").change(function () {
            $.getJSON("../Home/GetCommoditysJson", { classId: $(this).val() },
                   function (data) {
                       var obj = $("#grid");
                       obj.attr("style", "display:none");
                       InitDDL("#ddlCommoditys", "Select a Commodity", "false");
                       var lbl = $("#lblCommoditys"); lbl.attr("style", "visibility:normal");
                       var select = $("#ddlCommoditys");
                       $.each(data, function (i, item) {
                           select.append($('<option/>', { value: item.Value, text: item.Text }));
                       });
                   });
        });

        $("#ddlCommoditys").change(function () {
            //$('#chkWeight').click();
            //caption = Session["caption"];

            sessionData.SelectedCommodityId = $(this).val();
            sessionData.WaresVisible = "true";
            SaveSessionData();

            $("#WaresGrid").trigger("reloadGrid", [{ page: 1 }]);
            var obj = $("#grid");
            obj.attr("style", "display:normal");
        });

        $("button#search").click(function () {
            $.getJSON("../Home/SearchCommoditysJson", { search: $("#tbSearch").val() },
                   function (data) {
                       InitDDL("#ddlClasses", "Class", "true");
                       InitDDL("#ddlFamilys", "Family", "true");
                       if (data === null || data.length == 0) {
                           InitDDL("#ddlCommoditys", "Commodity", "true");
                           var lbl = $("#lblCommoditys"); lbl.attr("style", "visibility:hidden");
                       }
                       else {
                           var obj = $("#grid");
                           obj.attr("style", "display:none");
                           InitDDL("#ddlCommoditys", "Select a Commodity", "false");
                           var lbl = $("#lblCommoditys"); lbl.attr("style", "visibility:normal");
                           var select = $("#ddlCommoditys");
                           $.each(data, function (i, item) {
                               select.append($('<option/>', { value: item.Value, text: item.Text }));
                           });
                       }

                   });
        });

        $("#chkWeight").change(function () {
            var isChecked;
            var obj = $("#divWeights");

            if (this.checked) {
                isChecked = true;
                obj.attr("style", "display:normal");
                //obj = $("#grid");
                //obj.attr("style", "display:normal");
            }
            else {
                isChecked = false;
                obj.attr("style", "display:none");
                //obj = $("#grid");
                //obj.attr("style", "display:none");
            }

            sessionData.WeightVisible = isChecked;
            SaveSessionData();
        });

        $("#txtEnt").keydown(function (event) {
            OnlyNumbers(event);
        });
        $("#txtEnt").focusout(function () {
            var value = $(this).val();

            if (value == "") {
                var obj = $("#txtEnt");
                obj.attr("value", 0);
                value = 0;
            }

            if (ent != value) {
                sessionData.OwnershipWeight = value;
                SaveSessionData();
                ent = value;
            }
        });

        $("#txtCap").keydown(function (event) {
            OnlyNumbers(event);
        });
        $("#txtCap").focusout(function () {
            var value = $(this).val();

            if (value == "") {
                var obj = $("#txtCap");
                obj.attr("value", 0);
                value = 0;
            }

            if (cap != value) {
                sessionData.CapitalWeight = value;
                SaveSessionData();
                cap = value;
            }
        });

        $("#txtLab").keydown(function (event) {
            OnlyNumbers(event);
        });
        $("#txtLab").focusout(function () {
            var value = $(this).val();

            if (value == "") {
                var obj = $("#txtLab");
                obj.attr("value", 0);
                value = 0;
            }

            if (lab != value) {
                sessionData.LaborWeight = value;
                SaveSessionData();
                lab = value;
            }
        });

        $("#txtLan").keydown(function (event) {
            OnlyNumbers(event);
        });
        $("#txtLan").focusout(function () {
            var value = $(this).val();

            if (value == "") {
                var obj = $("#txtLan");
                obj.attr("value", 0);
                value = 0;
            }

            if (lan != value) {
                sessionData.LandWeight = value;
                SaveSessionData();
                lan = value;
            }
        });

    });

</script>
